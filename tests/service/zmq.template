// Generated by {{.Username}} on {{.Hostname}} - {{.BuildTime}}

#include <zmq.h>

#include "types.hpp"

namespace {{.PackageName}}
{

namespace message
{

struct header
{
    uint32_t _msgtype;
    uint32_t _payloadsize;
};

namespace code
{

{{range .Interfaces -}}
{{$interface := .Name}}
{{- range $msgid, $msg := .Methods -}}
const uint32_t {{$interface}}_{{$msg.Name}} = (uint32_t(PackageID) << 16) | {{$msgid}};
{{- end}}
{{- end}}

}

{{range .Interfaces -}}
{{$interface := .Name}}
{{- range .Methods}}
{{- if .Args}}
struct {{$interface}}_{{.Name}}_Args
{
{{- range $index, $arg := .Args}}
    {{cpptype $arg.TypeName}} _{{$arg.Name}};
{{- end}}
};
{{end}}

struct {{$interface}}_{{.Name}}
{
{{- if .Args}}
    header _header {code::{{$interface}}_{{.Name}}, sizeof ({{$interface}}_{{.Name}}_Args)};
    {{$interface}}_{{.Name}}_Args _payload;
{{- else}}
    header _header {code::{{$interface}}_{{.Name}}, 0};
{{- end}}
};
{{end}}
{{end}}

} // namespace message
} // namespace {{.PackageName}}
